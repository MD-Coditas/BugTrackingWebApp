@model PagedResult<BugDto>
@using BugTracker.Application.Enums
@using System.ComponentModel.DataAnnotations
@using System.Reflection

@functions {
    string GetPriorityClass(string? priority)
    {
        return priority switch
        {
            "High" => "text-danger fw-bold",
            "Medium" => "text-warning fw-semibold",
            "Low" => "text-warning text-opacity-75 fw-bold",
            _ => "text-secondary"
        };
    }

    string GetDisplayName(Enum value)
    {
        return value.GetType()
            .GetMember(value.ToString())[0]
            .GetCustomAttribute<DisplayAttribute>()?.Name ?? value.ToString();
    }
}

@{
    ViewData["Title"] = "QA Dashboard";
    var query = Context.Request.Query;
    var keyword = query["keyword"];
    var status = query["status"];
    var priority = query["priority"];
    var pageSize = ViewBag.PageSize ?? 5;
}

<h2>Manage Bugs</h2>

<form method="get" class="row g-2 mb-4">
    <div class="col-md-3">
        <input type="text" name="keyword" value="@keyword" class="form-control" placeholder="Search bugs..." />
    </div>

    <div class="col-md-2">
        <select name="status" class="form-select">
            <option value="">All Statuses</option>
            @foreach (var stat in (IEnumerable<Status>)ViewBag.StatusList)
            {
                var display = GetDisplayName(stat);
                if (display == "Resolved" || display == "Closed")
                {
                    <option value="@display" selected="@(status == display ? "selected" : null)">
                        @display
                    </option>
                }
            }
        </select>
    </div>

    <div class="col-md-2">
        <select name="priority" class="form-select">
            <option value="">All Priorities</option>
            @foreach (var p in (string[])ViewBag.Priorities)
            {
                <option value="@p" selected="@(priority == p ? "selected" : null)">
                    @p
                </option>
            }
        </select>
    </div>

    <div class="col-md-2">
        <select name="pageSize" class="form-select" onchange="this.form.submit()">
            @foreach (var size in new[] { 5, 10, 20, 50 })
            {
                <option value="@size" selected="@(size == pageSize ? "selected" : null)">
                    @size per page
                </option>
            }
        </select>
    </div>

    <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

@if (!Model.Items.Any())
{
    <p class="text-muted">No bugs to display.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>Status</th>
                <th>Priority</th>
                <th>Reported At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bug in Model.Items)
            {
                <tr>
                    <td>@bug.Title</td>
                    <td>@bug.Status</td>
                    <td class="@GetPriorityClass(bug.Priority)">
                        @bug.Priority
                    </td>
                    <td>@bug.CreatedAt.ToString("g")</td>
                    <td>
                        <a asp-controller="Bug" asp-action="Details" asp-route-id="@bug.Id" class="btn btn-sm btn-info">Details</a>

                        <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#statusModal-@bug.Id">
                            Change Status
                        </button>

                        <!-- Status Modal -->
                        <div class="modal fade" id="statusModal-@bug.Id" tabindex="-1" aria-labelledby="modalLabel-@bug.Id" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <form asp-action="UpdateStatus" method="post">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Update Status for @bug.Title</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            <input type="hidden" name="id" value="@bug.Id" />
                                            <select name="status" class="form-select">
                                                @foreach (var stat in (IEnumerable<Status>)ViewBag.StatusList)
                                                {
                                                    var display = GetDisplayName(stat);
                                                    <option value="@display" selected="@(bug.Status == display ? "selected" : null)">
                                                        @display
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">Update</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
    @{
    ViewBag.PageAction = "Dashboard";
    ViewBag.PageController = "QA";
    ViewBag.RouteValues = new Dictionary<string, object>
    {
        { "keyword", keyword },
        { "status", status },
        { "priority", priority }
    };
}
@await Html.PartialAsync("_Pagination", Model)
