@model IEnumerable<BugDto>
@using BugTracker.Application.Enums
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@functions {
    string GetPriorityClass(string? priority)
    {
        return priority switch
        {
            "High" => "text-danger fw-bold",
            "Medium" => "text-warning fw-semibold",
            "Low" => "text-warning text-opacity-75",
            _ => "text-secondary"
        };
    }
}

@{
    ViewData["Title"] = "My Reported Bugs";
}
@{
    Context.Response.Headers["Cache-Control"] = "no-cache, no-store, must-revalidate";
    Context.Response.Headers["Pragma"] = "no-cache";
    Context.Response.Headers["Expires"] = "0";
}

<div class="container mt-5">
    <h2 class="mb-4">My Reported Bugs</h2>

    <form method="get" class="row g-2 mb-4">
        <div class="col-md-4">
            <input type="text" name="keyword" class="form-control" placeholder="Search bugs..." value="@Context.Request.Query["keyword"]" />
        </div>

        <div class="col-md-3">
            <select name="status" class="form-select">
                <option value="">All Statuses</option>
                @foreach (var status in (IEnumerable<Status>)ViewBag.StatusList)
                {
                    var displayValue = status.GetType()
                    .GetMember(status.ToString())[0]
                    .GetCustomAttribute<DisplayAttribute>()?.Name ?? status.ToString();

                    <option value="@displayValue" selected="@(Context.Request.Query["status"] == displayValue ? "selected" : null)">
                        @displayValue
                    </option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <select name="priority" class="form-select">
                <option value="">All Priorities</option>
                @foreach (var p in (string[])ViewBag.Priorities)
                {
                    <option value="@p" selected="@(Context.Request.Query["priority"] == p ? "selected" : null)">
                        @p
                    </option>
                }
            </select>
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </form>

    @if (!Model.Any())
    {
        <p class="text-muted">You haven't reported any bugs yet.</p>
    }
    else
    {
        

        <table class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th>Title</th>
                    <th>Priority</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bug in Model)
                {
                    <tr>
                        <td>@bug.Title</td>
                        <td class="@GetPriorityClass(bug.Priority)">
                            @bug.Priority
                        </td>
                        <td>@bug.Status</td>
                        <td>@bug.CreatedAt.ToString("g")</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@bug.Id" class="btn btn-sm btn-outline-primary">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
